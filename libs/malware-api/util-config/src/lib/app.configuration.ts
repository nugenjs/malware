import { Inject } from "@nestjs/common";
import { ConfigType, registerAs } from "@nestjs/config";

export const appConfiguration = registerAs('app', () => ({
  port: Number(process.env.PORT) || 3000,
  environment: process.env.NODE_ENV || 'development',
  name: process.env.APP_NAME || 'Malware API',
  version: process.env.APP_VERSION || '1.0.0',
  description: process.env.APP_DESCRIPTION || 'Malware API',
  url: process.env.APP_URL || 'http://localhost:3000',
  host: process.env.APP_HOST || 'localhost',
  protocol: process.env.APP_PROTOCOL || 'http',
  get domain(): string {
    return `${this.protocol}://${this.host}:${this.port}`;
  },
  swagger: {
    title: process.env.APP_NAME || 'Malware API',
    description: process.env.APP_DESCRIPTION || 'Malware API',
    version: process.env.APP_VERSION || '1.0.0',
    path: 'api',
  },
}));

// export const databaseConfiguration = registerAs('database', () => ({
//   host: process.env.DB_HOST || 'localhost',
//   port: process.env.DB_PORT || 5432,

export type AppConfiguration = ConfigType<typeof appConfiguration>;

export const InjectAppConfig = () => Inject(appConfiguration.KEY);
