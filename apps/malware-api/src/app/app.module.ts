import { Module } from "@nestjs/common";

import { AppController } from "./app.controller";
import { AppService } from "./app.service";

import { MalwareApiFeatureConfigModule } from "@malware/malware-api/feature-config";
import { MongooseModule } from "@nestjs/mongoose";
import { ConfigService } from "@nestjs/config";
import { MongoConfiguration, mongoConfiguration } from "@malware/malware-api/util-config";

@Module({
  imports: [
    MalwareApiFeatureConfigModule,
    MongooseModule.forRootAsync({
      // imports: [MalwareApiFeatureConfigModule],
      useFactory: (config: MongoConfiguration) => ({
        uri: config.uri,
        dbName: config.dbName,
        // db: config.get('mongo.db'),
        // host: config.get('mongo.host'),
        // port: config.get('mongo.port'),
        // database: config.get('mongo.database'),
        // auth: {
        //   username: config.get('mongo.auth.username'),
        //   password: config.get('mongo.auth.password'),
        // },
      }),
      inject: [mongoConfiguration.KEY],
    }),
  ],
  controllers: [AppController],
  providers: [AppService],
})
export class AppModule { }
