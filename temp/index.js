import fetch, {Headers} from "node-fetch"
import appProps from  'appProps.json' assert { type: "json" };

const baseUrl = 'https://api.myanimelist.net/'
const apiVer = 'v2/'
const firstEP = 'anime/10357?fields=rank,mean,alternative_titles'
let username = 'nugen_exe'
username = 'therealmccree'
// username = 'bambibutt'
const usersEP = `users/${username}/animelist?`


//curl 'https://api.myanimelist.net/v2/ \

// https://github.com/SuperMarcus/myanimelist-api-specification#sortingmethodenum
// https://myanimelist.net/apiconfig/references/api/v2#operation/users_user_id_animelist_get


async function main () {
	let genreMap = new Map()
	const queryParams = {
		fields: 'list_status,start_date,mean,alternative_titles,genres,studios',
		status: 'completed',
		limit: '100',
		nsfw: 'true'
	}
	let url = `${baseUrl}${apiVer}${usersEP}${'' + new URLSearchParams(queryParams)}`
	const headers = new Headers({
		'X-MAL-CLIENT-ID': appProps.mal.malHeaders
	})

	
	let count = 0
	do {
		console.log(count+'timeStart')
		console.time(count)
		let response = await fetch(url, { headers })
		console.log(count+'timeLog1')
		console.timeLog(count)
	
		let responseJSON = await response.json()
		
		// console.log(JSON.stringify(responseJSON))
		mapGenres(genreMap,responseJSON.data)

		// let count2 = 0;
		// responseJSON.data.forEach(e => {
		// 	count2++
		// 	console.log(count2 + '  ' + e.node.title)
		// })
		
		
		// console.log(genreMap)
	
	
		console.log(count+'timeEnd')
		console.timeEnd(count)

		url = responseJSON.paging.next

		count++
	} while(url !== undefined)


	genreMap.forEach((value,key) => {
		const count = value.count
		// if(count < 2) return
		const malAvg = value.malScoreSum / count
		const userAvg = value.userScoreSum / count
		value.malAvg = malAvg
		value.userAvg = userAvg
		value.rateDiff = userAvg - malAvg

		// console.log(`${(userAvg - malAvg).toFixed(2)} ${key}: Count=${count}, MAL=${malAvg.toFixed(2)}, USER=${userAvg.toFixed(2)}`)
	})
	
	let arr = [...genreMap]

	arr.sort((valueA, valueB) => {
		return valueB[1].count - valueA[1].count
	})


	arr.forEach(e => {
		let key = e[0]
		let val = e[1]

		// if(val.count < 2) return
		console.log(`${val.rateDiff.toFixed(2)} ${key}: Count=${val.count}, MAL=${val.malAvg.toFixed(2)}, USER=${val.userAvg.toFixed(2)}`)
	})

	// genreMap.forEach((value,key) => {
	// 	const count = value.count
	// 	// if(count < 2) return
	// 	const malAvg = value.malScoreSum / count
	// 	const userAvg = value.userScoreSum / count
	// 	console.log(`${(userAvg - malAvg).toFixed(2)} ${key}: Count=${count}, MAL=${malAvg.toFixed(2)}, USER=${userAvg.toFixed(2)}`)
	// })

}

function mapGenres(genreMap, animeList) {
	const alLen = animeList.length
	for (let i = 0; i < alLen; i++) {
		let animeListItem = animeList[i]
		let genres = animeListItem.node.genres

		// console.log(animeList[i].node.title)	
		// console.log(animeListItem.node.mean + ' ' + animeListItem.list_status.score )

		genres.forEach(e => {
			let genre = e.name
			// console.log(genre)

			if (genre === 'Drama') {
				console.log(genre + ' ~~~~~~~~~ ' + animeList[i].node.title)
			}

			if (genre == '') {
				console.log(' ~~~~~~~~~~~~' + animeList[i].node.title)
			}
			
			if (animeListItem.list_status.score === 0) {
				// console.log(`Skipped Genre=${genre} Title=${animeList[i].node.title}`)
				return
			}

			if (genreMap.has(genre)) {
				let genreMapValue = genreMap.get(genre)

				genreMapValue.count++
				genreMapValue.malScoreSum += animeListItem.node.mean
				genreMapValue.userScoreSum += animeListItem.list_status.score
			} else {
				genreMap.set(genre, {
					count: 1,
					malScoreSum: animeListItem.node.mean,
					userScoreSum: animeListItem.list_status.score
				})
			}
		})
		// console.log('~~~~~~~~~~~~')
	}
}


// Aptly named, but is for studios
function mapGenres2(genreMap, animeList) {
	const alLen = animeList.length
	for (let i = 0; i < alLen; i++) {
		let animeListItem = animeList[i]
		let genres = animeListItem.node.studios

		// console.log(animeList[i].node.title)	
		// console.log(animeListItem.node.mean + ' ' + animeListItem.list_status.score )

		genres.forEach(e => {
			let genre = e.name
			// console.log(genre)

			// if (genre === 'Samurai') {
			// 	console.log(genre + ' ~~~~~~~~~ ' + animeList[i].node.title)
			// }

			if (genre == '') {
				console.log(' ~~~~~~~~~~~~' + animeList[i].node.title)
			}
			
			if (animeListItem.list_status.score === 0) {
				// console.log(`Skipped Genre=${genre} Title=${animeList[i].node.title}`)
				return
			}

			if (genreMap.has(genre)) {
				let genreMapValue = genreMap.get(genre)

				genreMapValue.count++
				genreMapValue.malScoreSum += animeListItem.node.mean
				genreMapValue.userScoreSum += animeListItem.list_status.score
			} else {
				genreMap.set(genre, {
					count: 1,
					malScoreSum: animeListItem.node.mean,
					userScoreSum: animeListItem.list_status.score
				})
			}
		})
		// console.log('~~~~~~~~~~~~')
	}
}


console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
console.log('~~~~~~~~~~~~~~~~~~~~')
console.log('~~~~~~~~~~~~~~~~~~~~')
console.log('~~~~~~~~~~~~~~~~~~~~')
console.log('~~~~~~~~~~~~~~~~~~~~')
console.log('~~~~~~~~~~~~~~~~~~~~')
main()